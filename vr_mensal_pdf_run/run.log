$ /usr/local/bin/python3 /mnt/data/vr_mensal_pdf_run/src/main.py --inicio 2025-04-15 --fim 2025-05-15 --competencia 2025-05 --data_dir /mnt/data/vr_mensal_pdf_run/data --out_dir /mnt/data/vr_mensal_pdf_run/out

STDOUT:
Gerado: /mnt/data/vr_mensal_pdf_run/out/VR_MENSAL_202505.csv


STDERR:
/mnt/data/vr_mensal_pdf_run/src/main.py:135: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  df["data_demissao"] = df.get("data_demissao", pd.Series(index=df.index)).map(try_parse_date)
/mnt/data/vr_mensal_pdf_run/src/main.py:136: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  df["matricula"] = df.get("matricula", pd.Series(index=df.index)).astype(str).str.extract(r"(\d+)").fillna(df.get("matricula"))
/mnt/data/vr_mensal_pdf_run/src/main.py:175: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  df["admissao"] = df.get("admissao", pd.Series(index=df.index)).map(try_parse_date)
/mnt/data/vr_mensal_pdf_run/src/main.py:176: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  df["matricula"] = df.get("matricula", pd.Series(index=df.index)).astype(str).str.extract(r"(\d+)").fillna(df.get("matricula"))
/mnt/data/vr_mensal_pdf_run/src/main.py:246: DeprecationWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`
  ativos.loc[miss, "admissao"] = ativos.loc[miss, "matricula"].map(amap)

